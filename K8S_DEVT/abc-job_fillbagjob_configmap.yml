kind: ConfigMap
apiVersion: v1  
metadata:
  name: fillbagjob-application-yml
  namespace: abc-job
data:
   application.yml: |-
      spring:
          config:
           activate:
             on-profile: dev
          datasource:
            url: jdbc:mysql://mysql-router-svc.abc-dao.svc.cluster.local:3306/MYDB_BATCH?enabledTLSProtocols=TLSv1.2
            username: ${dbusername}
            password: ${dbpassword}
            hikari:
              auto-commit: 'false'
          jpa:
            show-sql: true
            hibernate:
              ddl-auto: none
              generate-ddl: false
              naming:
                implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
                physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
            properties:
                jdbc:
                  time_zone: Asia/Singapore
                  batch_size: '25'
                  lob:
                    non_contextual_creation: 'true'
                query:
                  fail_on_pagination_over_collection_fetch: 'true'
                  in_clause_parameter_padding: 'true'
                generate_statistics: 'false'
                id:
                  optimizer:
                    pooled:
                      preferred: pooled-lo
                  new_generator_mappings: 'true'
                order_updates: 'true'
                order_inserts: 'true'
                connection:
                  provider_disables_autocommit: 'true'
                open-in-view: 'false'
          main:
              allow-bean-definition-overriding: 'true'
          liquibase:
              change-log: classpath:/db/migration/liquibase-changelog.xml
          security:
            oauth2:
             resourceserver:
                jwt:
                 issuer-uri: http://keycloak.abc-auth.svc.cluster.local:9003/realms/abc01
                 jwk-set-uri: http://keycloak.abc-auth.svc.cluster.local:9003/realms/abc01/protocol/openid-connect/certs
             client:
              registration:
               codetable:
                client-id: CODETABLE01
                client-secret: ZUwoQGQ51x4ACPzsuaM2dG4djOeQhM94
                authorization-grant-type: client_credentials
                scope: openid
               sysvar:
                client-id: SYSVAR01
                client-secret: TcqCKWz5HlZsi4vXnLBKzzjPQOp9pgB0
                authorization-grant-type: client_credentials
                scope: openid
              provider:
               codetable:
                 authorization-uri: http://keycloak.abc-auth.svc.cluster.local:9003/realms/abc01/protocol/openid-connect/auth
                 token-uri: http://keycloak.abc-auth.svc.cluster.local:9003/realms/abc01/protocol/openid-connect/token
                 jwk-set-uri: http://keycloak.abc-auth.svc.cluster.local:9003/realms/abc01/protocol/openid-connect/certs
               sysvar:
                 authorization-uri: http://keycloak.abc-auth.svc.cluster.local:9003/realms/abc01/protocol/openid-connect/auth
                 token-uri: http://keycloak.abc-auth.svc.cluster.local:9003/realms/abc01/protocol/openid-connect/token
                 jwk-set-uri: http://keycloak.abc-auth.svc.cluster.local:9003/realms/abc01/protocol/openid-connect/certs
      lifecycle:
        timeout-per-shutdown-phase: 20s
      management:
          security:
            enabled: false
          metrics:
              enable:
                all: true
              distribution:
                percentiles-histogram:
                  http:
                    server:
                      requests: true
              tags:
                 application: ${spring.application.name}
          endpoints:
            web:
              exposure:
                include: "configprops,env,health,info,logfile,loggers,metrics,prometheus"
              base-path: /envcodetable/actuator
          endpoint:
            health:
              show-details: always
              group:
                custom:
                  include: db
          health:
            retries:
              enabled: true
            ratelimiters:
              enabled: true
            circuitbreakers:
              enabled: true              
          tracing:
            sampling:
               probability: 1.0
          zipkin:
            tracing:
              endpoint: http://zipkin.abc-route.svc.cluster.local:9411/api/v2/spans
          info:
           git:
            enabled: true
            mode: full
      logging:
          level:
            org:
              springframework: INFO
              hibernate:
                 orm.jdbc.bind: trace                
              jdbc:
                core:
                  springframework.JdbcTemplate: DEBUG
                  springframework.StatementCreatorUtils: TRACE
            com:
              mysql: DEBUG
      client:
        registration:
           name: codetable
      keycloak:
           token:
             signkey: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6EAblfWIgYVyRtNytcN+hwqPPKcMQzi1FKR/EP184mnyJcpYrdtqJXaeNsya8F6j8GsGwhxijBKkDEeKXLwGshKdlzDKdkLlmVG3y66seSjjKUXSbQMa0VaXg47IyeflgLdK29+WNY51fW3RKEA80hXrA9xsIknW2xuYGPzfJrNHU68U2MTmujle0F/b2hmdA7XxeD+fijl8dEep8gNCXA/eBWanJIDfaSFzzZd3JM9ekDAhgqxWhFXmPRZXKsKvoOLZ6xLFE1DsSVsUedJuLuVAUISUibDQUxShvJCmU4vsNmsk8s747gXeFl6Q64SXL33NoZ+MLTxSG5J7EPOaFQIDAQAB
           client:
              id: CODETABLE01
      resilience4j:
         ratelimiter:
           metrics:
             enabled: true
           configs:
             default:
              limitForPeriod: 50
              limitRefreshPeriod: 3s
              timeoutDuration: 1s
              registerHealthIndicator: true 
           instances:
             rateLimitFindSysvar:
              baseConfig: default
              limitForPeriod: 10
         retry:
          retryAspectOrder: 2
          metrics:
           enabled: true
          configs:
           default:
              maxAttempts: 5
              waitDuration: 200ms
              enableExponentialBackoff: true
              exponentialBackoffMultiplier: 2
              registerHealthIndicator: true
          instances:
            retryFindSysvar:
               baseConfig: default
               waitDuration: 100
               maxAttempts: 7
         circuitbreaker:
            circuitBreakerAspectOrder: 1
            metrics:
             enabled: true
            configs:
             default:
                slidingWindowSize: 5
                slidingWindowType: COUNT_BASED             
                failureRateThreshold: 70
                minimumNumberOfCalls: 2
                automaticTransitionFromOpenToHalfOpenEnabled: true
                waitDurationInOpenState: 3s
                permittedNumberOfCallsInHalfOpenState: 1
                registerHealthIndicator: true
                eventConsumerBufferSize: 100                
            instances:
              circuitBreakerFindSysvar:
                baseConfig: default
                failureRateThreshold: 60
                  
---
kind: ConfigMap
apiVersion: v1           
metadata:
  name: fillbagjob-logback-xml
  namespace: abc-job
data:  
   logback-spring.xml: |-
    <?xml version="1.0" encoding="UTF-8"?>
     <configuration>
        <appender class="ch.qos.logback.core.ConsoleAppender"
            name="stdout">
            <encoder>
                <pattern>
                    %d{yyyy-MM-dd} | %d{HH:mm:ss.SSS} | %thread | %5p | %logger{25} | %12(ID:
                    %8mdc{id}) | %X{traceId:-} | "%X{spanId:-}" | ${appName} | %m%n
                </pattern>
            </encoder>
        </appender>
        <appender class="ch.qos.logback.core.ConsoleAppender" name="jsonstdout">
            <encoder
                class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp>
                        <timeZone>Asia/Singapore</timeZone>
                        <timestampPattern>yyyy-MM-dd'T'HH:mm:ss.SSS</timestampPattern>
                    </timestamp>
                    <pattern>
                        <pattern>
                            {
                            "service" : "${appName}",
                            "level": "%p",
                            "thread": "%thread",
                            "trace": "%X{traceId:-}",
                            "span": "%X{spanId:-}",
                            "class": "%logger{40}",
                            "message": "%m"
                            }
                        </pattern>
                    </pattern>
                    <stackTrace>
                        <throwableConverter
                            class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                            <maxDepthPerThrowable>30</maxDepthPerThrowable>
                            <maxLength>2048</maxLength>
                            <shortenedClassNameLength>20</shortenedClassNameLength>
                            <rootCauseFirst>true</rootCauseFirst>
                        </throwableConverter>
                    </stackTrace>
                </providers>
            </encoder>
        </appender>
        <springProfile name="LOCAL">
            <root level="info">
                <appender-ref ref="stdout" />
            </root>
        </springProfile>
        <springProfile name="!LOCAL">
            <root level="info">
                <appender-ref ref="jsonstdout" />
            </root>
            <logger name="com.abc.asia.mikohata" level="debug" additivity="false">
                <appender-ref ref="jsonstdout" />
            </logger>
        </springProfile>
    </configuration>